apiVersion: apps/v1
kind: Deployment
metadata:
  name: mm-rules-matchmaking
  labels:
    app: mm-rules-matchmaking
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mm-rules-matchmaking
  template:
    metadata:
      labels:
        app: mm-rules-matchmaking
    spec:
      containers:
      - name: matchmaking
        image: mm-rules-matchmaking:latest
        ports:
        - containerPort: 8080
        env:
        - name: MM_RULES_REDIS_ADDR
          value: "redis-service:6379"
        - name: MM_RULES_ALLOCATION_WEBHOOK_URL
          value: "http://allocation-service:8081/allocate"
        - name: MM_RULES_LOG_LEVEL
          value: "info"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: mm-rules-service
  labels:
    app: mm-rules-matchmaking
spec:
  selector:
    app: mm-rules-matchmaking
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mm-rules-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: matchmaking.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mm-rules-service
            port:
              number: 8080 